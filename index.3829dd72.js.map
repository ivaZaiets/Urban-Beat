{"mappings":"ACGA,IAAM,EAAW,IAAI,qBAAqB,SAAA,CAF1C,EAGE,EAAQ,OAAO,CAAC,SAAA,CAAhB,EACE,EAAM,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,OAAQ,EAAM,cAAc,CAC5D,EACF,GAEM,EAAkB,SAAC,CAAzB,EAGE,OAAO,AAFU,SAAS,gBAAgB,CAAC,GAE3B,OAAO,CAAC,SAAA,CAAxB,EACE,EAAS,OAAO,CAAC,EACnB,EACF,EAEA,EAAgB,gBAChB,EAAgB","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\n/* eslint-disable */ var observer = new IntersectionObserver(function(entries) {\n    entries.forEach(function(entry) {\n        entry.target.classList.toggle(\"show\", entry.isIntersecting);\n    });\n});\nvar elementsWrapper = function(style) {\n    var elements = document.querySelectorAll(style);\n    return elements.forEach(function(el) {\n        observer.observe(el);\n    });\n};\nelementsWrapper(\".hidden-left\");\nelementsWrapper(\".hidden\");\n\n//# sourceMappingURL=index.3829dd72.js.map\n","'use strict';\n/* eslint-disable */\n\nconst observer = new IntersectionObserver(entries => {\n  entries.forEach(entry => {\n    entry.target.classList.toggle('show', entry.isIntersecting);\n  });\n});\n\nconst elementsWrapper = (style) => {\n  const elements = document.querySelectorAll(style);\n\n  return elements.forEach(el => {\n    observer.observe(el);\n  });\n};\n\nelementsWrapper('.hidden-left');\nelementsWrapper('.hidden');\n"],"names":["observer","IntersectionObserver","entries","forEach","entry","target","classList","toggle","isIntersecting","elementsWrapper","style","elements","document","querySelectorAll","el","observe"],"version":3,"file":"index.3829dd72.js.map"}